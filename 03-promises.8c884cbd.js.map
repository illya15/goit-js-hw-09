{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAItC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5BC,YAAY,KACRN,EACFI,EAAS,C,SAACN,E,MAAUC,IAEpBM,EAAQ,C,SAACP,E,MAAUC,GAAO,GAE3BA,EAAM,G,CAZXL,EAAOa,iBAAiB,UAkBxB,SAAsBC,GACpBA,EAAEC,iBACA,IAAIC,EAAaC,OAAOjB,EAAOK,MAAMa,OACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAOoB,OAAOF,MAAOC,IAC5ChB,EAAcgB,EAAGH,GAClBK,MAAK,EAACjB,SAACA,EAAQC,MAACA,MACfP,EAAAwB,OAAOC,QAAQ,uBAAuBnB,QAAeC,OAAW,IAEjEmB,OAAM,EAACpB,SAACA,EAAQC,MAACA,MAChBP,EAAAwB,OAAOG,QAAQ,sBAAsBrB,QAAeC,OAAW,IAE/DW,GAAYC,OAAOjB,EAAO0B,KAAKR,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmitForm);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((resolve, reject) =>  {\n    setTimeout (() => {\n    if (shouldResolve) {\n      resolve ({position, delay})\n    } else {\n      reject ({position, delay})\n    }\n  }, delay)\n\n })\n\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n    let timerDelay = Number(formEl.delay.value);\n      for (let i = 1; i <= formEl.amount.value; i++) {\n    createPromise(i, timerDelay)\n  .then(({position,delay}) => {\n    Notify.success(`? Fulffiled promise ${position} in ${delay} ms`);\n  })\n  .catch(({position,delay}) => {\n    Notify.failure(`? Rejected promise ${position} in ${delay} ms`);\n  });\n    timerDelay+=Number(formEl.step.value);\n  }\n}\n\n        \n  "],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","timerDelay","Number","value","i","amount","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.8c884cbd.js.map"}